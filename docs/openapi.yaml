openapi: 3.0.3
info:
  title: Brain-ag
  description: Brain-ag rest API.
  version: 1.0.0

servers:
  - url: https://api.exemplo.com/v1
    description: Brain-ag

paths:
  /producer:
    get:
      summary: List all Producers
      responses:
        '200':
          description: List of producers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProducerResponse'
    post:
      summary: Create a new Produtor register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Producer'
      responses:
        '201':
          description: Producer regitered !
          content:
            application/json:
              schema:
                items:
                  type: object
                  properties:
                    statusCode:
                      type: number
                      example: 200
                    message:
                      type: string
                      example: "Producer registered !!!"
        '500':
          description: Error !
          content:
            application/json:
              schema:
                items:
                  type: object
                  properties:
                    statusCode:
                      type: number
                      example: 500
                    message:
                      type: string
                      example: "Validation error"


  /producer/{id}:
    get:
      summary: Get Producer by Id
      parameters:
        - $ref: '#/components/parameters/IdParam'
      responses:
        '200':
          description: Producer Data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProducerResponse'
    patch:
      summary: Update Produtor
      parameters:
        - $ref: '#/components/parameters/IdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Producer'
      responses:
        '200':
          description: Producer Upated!
          content:
            application/json:
              schema:
                items:
                  type: object
                  properties:
                    statusCode:
                      type: number
                      example: 200
                    message:
                      type: string
                      example: "Producer Updated !!!"
    delete:
      summary: Delete a Producer
      parameters:
        - $ref: '#/components/parameters/IdParam'
      responses:
        '204':
          description: Producer Deleted !
          content:
            application/json:
              schema:
                items:
                  type: object
                  properties:
                    statusCode:
                      type: number
                      example: 200
                    message:
                      type: string
                      example: "Producer deleted"

  /farm:
    get:
      summary: List all farms
      responses:
        '200':
          description: Lista de fazendas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FarmResponse'
    post:
      summary: Register a new Farm
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Farm'
      responses:
        '201':
          description: Farm regitered !
          content:
            application/json:
              schema:
                items:
                  type: object
                  properties:
                    statusCode:
                      type: number
                      example: 200
                    message:
                      type: string
                      example: "Farm registered !!!"
        '500':
          description: Error !
          content:
            application/json:
              schema:
                items:
                  type: object
                  properties:
                    statusCode:
                      type: number
                      example: 500
                    message:
                      type: string
                      example: "Validation error"

  /farm/{id}:
    get:
      summary: Get a farm by Id
      parameters:
        - $ref: '#/components/parameters/IdParam'
      responses:
        '200':
          description: Farm Data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FarmResponse'
    patch:
      summary: Update a Farm
      parameters:
        - $ref: '#/components/parameters/IdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Farm'
      responses:
        '200':
          description: Farm Upated!
          content:
            application/json:
              schema:
                items:
                  type: object
                  properties:
                    statusCode:
                      type: number
                      example: 200
                    message:
                      type: string
                      example: "Farm Updated !!!"
    delete:
      summary: Deleta uma fazenda
      parameters:
        - $ref: '#/components/parameters/IdParam'
      responses:
        '204':
          description: Farm Deleted !
          content:
            application/json:
              schema:
                items:
                  type: object
                  properties:
                    statusCode:
                      type: number
                      example: 200
                    message:
                      type: string
                      example: "Farm deleted"

  /harvest:
    get:
      summary: List all Harvests
      responses:
        '200':
          description: Harvests list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HarvestResponse'
    post:
      summary: Creates a new Harvest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Harvest'
      responses:
        '201':
          description: Harvest regitered !
          content:
            application/json:
              schema:
                items:
                  type: object
                  properties:
                    statusCode:
                      type: number
                      example: 200
                    message:
                      type: string
                      example: "Harvest registered !!!"
        '500':
          description: Error !
          content:
            application/json:
              schema:
                items:
                  type: object
                  properties:
                    statusCode:
                      type: number
                      example: 500
                    message:
                      type: string
                      example: "Validation error"

  /harvest/{id}:
    get:
      summary: Get Harvest by Id
      parameters:
        - $ref: '#/components/parameters/IdParam'
      responses:
        '200':
          description: Harvest Data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HarvestResponse'
    patch:
      summary: Atualiza uma colheita
      parameters:
        - $ref: '#/components/parameters/IdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Harvest'
      responses:
        '200':
          description: Harvest Upated!
          content:
            application/json:
              schema:
                items:
                  type: object
                  properties:
                    statusCode:
                      type: number
                      example: 200
                    message:
                      type: string
                      example: "Harvest Updated !!!"
    delete:
      summary: Deleta uma colheita
      parameters:
        - $ref: '#/components/parameters/IdParam'
      responses:
        '204':
          description: Harvest Deleted !
          content:
            application/json:
              schema:
                items:
                  type: object
                  properties:
                    statusCode:
                      type: number
                      example: 200
                    message:
                      type: string
                      example: "Harvest deleted"

components:
  parameters:
    IdParam:
      name: id
      in: path
      required: true
      schema:
        type: string
      description: ID do recurso

  schemas:
    Producer:
      type: object
      properties:
        name:
          type: string
        cpfOrCnpj:
          type: string

    Farm:
      type: object
      properties:
        name:
          type: string
        city:
          type: string
        state:
          type: string
        fieldSize:
          type: number
        cultivableField:
          type: number
        vegetationField:
          type: number
        owner:
          type: number

    Harvest:
      type: object
      properties:
        farmId:
          type: string
        culture:
          type: string
        farm:
          type: number

    ProducerResponse:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        cpfOrCnpj:
          type: string
        createdAt:
          type: string
          format: date
        updatedAt:
          type: string
          format: date

    FarmResponse:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        city:
          type: string
        state:
          type: string
        fieldSize:
          type: number
        cultivableField:
          type: number
        vegetationField:
          type: number
        owner:
          type: number
        createdAt:
          type: string
          format: date
        updatedAt:
          type: string
          format: date

    HarvestResponse:
      type: object
      properties:
        id:
          type: number
        farmId:
          type: string
        culture:
          type: string
        farm:
          type: number
        createdAt:
          type: string
          format: date
        updatedAt:
          type: string
          format: date